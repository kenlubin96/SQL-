# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#1. What are the top 10 most popular tracks?
SELECT track_name AS track, artist_name AS artist
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10; 

#2. Find all tracks with a danceability score greater than 0.8 and an energy score greater than 0.7.
SELECT track_name AS tracks, artist_name AS artist, danceability, energy
FROM BIT_DB.Spotifydata
WHERE danceability >0.8 
AND energy >0.7;

#3. What is the average tempo for tracks with a song key of 1?
SELECT AVG(TEMPO)
FROM BIT_DB.Spotifydata
WHERE song_key =1;

#4. List the artist names and track names for all tracks with an acousticness score greater than 0.5, sorted by acousticness in descending order.
SELECT artist_name AS artist, track_name AS tracks
FROM BIT_DB.Spotifydata
WHERE acousticness >0.5
ORDER BY acousticness desc; 

#5. Find the top 5 artists with the highest average popularity.
SELECT artist_name, AVG(popularity) as avg_popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_popularity DESC
LIMIT 5;

#6. List all tracks with a duration greater than the average song duration.
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
WHERE duration_ms > (SELECT AVG(duration_ms) FROM BIT_DB.Spotifydata);

#7. Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;

